# This is a basic workflow to help you get started with Actions

name: Custom Release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    tags:
      - 'v*'

  release:
    types: [ prereleased, released ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      createRelease:
        description: 'Create Release'
        required: false
        default: 'false'
      uploadToJBM:
        description: 'Upload to Jetbrains Marketplace?'
        required: false
        default: 'true'

jobs:

  # Prepare and publish the plugin to the Marketplace repository
  release:
    name: Publish Plugin
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.release.tag_name }}

      # Setup Java 11 environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11

      # Publish the plugin to the Marketplace
      - if: github.event.inputs.uploadToJBM == 'true'
        name: Publish Plugin
        env:
          PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
          CERTIFICATE_CHAIN: ${{ secrets.CERTIFICATE_CHAIN }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          PRIVATE_KEY_PASSWORD: ${{ secrets.PRIVATE_KEY_PASSWORD }}
        run: ./gradlew publishPlugin

      - if: github.event.inputs.uploadToJBM == 'false'
        name: Build Plugin
        env:
          PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
          CERTIFICATE_CHAIN: ${{ secrets.CERTIFICATE_CHAIN }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          PRIVATE_KEY_PASSWORD: ${{ secrets.PRIVATE_KEY_PASSWORD }}
        run: ./gradlew buildPlugin

      # Upload artifact as a release asset
      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.event.release.tag_name }} /build/distributions/*

#      - uses: actions/upload-artifact@v3
#        with:
#          name: Compose Plugin
#          path: /build/distributions/*
#
#      - name: Create Release
#        id: create_release
#        uses: softprops/action-gh-release@v1
#        if: startsWith(github.ref, 'refs/tags/')
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          fail_on_unmatched_files: true
#          tag_name: ${{ env.VERSION_TAG }}
#          name: Release ${{ env.VERSION_TAG }}
#          files: |
#            mangaworld-release.apk
#            animeworld-release.apk
#            novelworld-release.apk
#            animeworldtv-release.apk
#            mangaworld-no-firebase-release.apk
#            animeworld-no-firebase-release.apk
#            novelworld-no-firebase-release.apk
#            animeworldtv-no-firebase-release.apk
